

service: its-always-sunny-in-slack

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 256
  # iamRoleStatements:
  #   - Effect: Allow
  #     Action:
  #       - dynamodb:DescribeTable
  #       - dynamodb:Query
  #       - dynamodb:Scan
  #       - dynamodb:GetItem
  #       - dynamodb:PutItem
  #       - dynamodb:UpdateItem
  #     Resource: "arn:aws:dynamodb:us-east-1:*:*"
package:
 include:
   - node_modules/**
   - ./Textile.ttf
   - ./hncb.ttf
 exclude:
   - readmeAssets/**

functions:
  ping: 
    handler: handler.ping
    events:
      - http:
          path: ping/
          method: GET
  generateTitleCard:
    handler: handler.generateTitleCard
    events: 
      - http:
          path: sunny/sweetdee
          method: POST
    environment:
      IMGUR_CLIENT_ID:  ${file(./.serverless.env.yml):${opt:stage}.imgur.IMGUR_CLIENT_ID}
  generateAdultSwimCard:
    handler: handler.generateAdultSwimCard
    events: 
      - http:
          path: sunny/adult
          method: POST
    environment:
      IMGUR_CLIENT_ID:  ${file(./.serverless.env.yml):${opt:stage}.imgur.IMGUR_CLIENT_ID}
  authorize:
    handler: handler.authorize
    events: 
      - http:
          path: sunny/authorize
          method: GET
    environment:
      SLACK_CLIENT_ID:  ${file(./.serverless.env.yml):${opt:stage}.slack.SLACK_CLIENT_ID}
      SLACK_CLIENT_SECRET: ${file(./.serverless.env.yml):${opt:stage}.slack.SLACK_CLIENT_SECRET}
      SLACK_VERIFICATION_TOKEN: ${file(./.serverless.env.yml):${opt:stage}.slack.SLACK_VERIFICATION_TOKEN}
  addLink: 
    handler: handler.addLink
    events:
      -http:
        path: sunny/addLink
          method: POST
  actionHandler:
    handler: handler.actionHandler
    events:
      -http:
        path: sunny/actionHandler
          method: POST
resources:
  Resources:
    pathmapping:
      Type: AWS::ApiGateway::BasePathMapping
      Properties:
          BasePath: oauth2
          DomainName: ${file(./.serverless.env.yml):${opt:stage}.aws.DOMAIN_NAME}
          RestApiId: 
              Ref: ApiGatewayRestApi
          Stage: dev
    sunnySlackbotTokenTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: sunnySlackbotTokenTable
        AttributeDefinitions:
          - AttributeName: team_id
            AttributeType: S
        KeySchema:
          - AttributeName: team_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    linksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: linksTable
        AttributeDefinitions:
          - AttributeName: team_id
            AttributeType: S
        KeySchema:
          - AttributeName: team_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    sunnyPosts:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: sunnyPosts
        AttributeDefinitions:
          - AttributeName: link
            AttributeType: S
        KeySchema:
          - AttributeName: link
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: sunnySlackbotTokenTable
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:Query
              Resource: arn:aws:dynamodb:*:*:table/sunnySlackbotTokenTable
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:Query
                - dynamodb:Scan
              Resource: arn:aws:dynamodb:*:*:table/sunnyPosts
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:Query
                - dynamodb:Scan
              Resource: arn:aws:dynamodb:*:*:table/linksTable
        Roles:
          - Ref: IamRoleLambdaExecution